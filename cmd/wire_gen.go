// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go-leaf/internal/conf"
	"go-leaf/internal/logic"
	"go-leaf/internal/pkg"
	"go-leaf/internal/server"
	"go-leaf/internal/service"
)

import (
	_ "github.com/go-sql-driver/mysql"
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func WireApp(confServer conf.Server, confConf conf.Conf, logger log.Logger) (*kratos.App, func(), error) {
	helper := pkg.NewHelper(logger)
	general := logic.NewGeneral(confConf, helper)
	serviceGeneral := service.NewGeneral(general, helper)
	admin := logic.NewAdmin()
	serviceAdmin := service.NewAdmin(helper, admin)
	grpcServer := server.NewGRPCServer(confServer, logger, serviceGeneral, serviceAdmin)
	httpServer := server.NewHTTPServer(confServer, logger, serviceGeneral, serviceAdmin)
	pprof := pkg.NewPprof(confConf, logger)
	app := NewApp(logger, grpcServer, httpServer, confServer, pprof)
	return app, func() {
	}, nil
}
